<?xml version="1.0" encoding="UTF-8"?>
<project>
    <property file="build.properties"/>

    <!-- SDK properties -->
    <property name="ADT" value="${FLEX_HOME}/lib/adt.jar"/>
    <property name="ADL" value="${FLEX_HOME}/bin/adl"/>

    <!-- points to our flexTasks.jar we copied to the libs folder to distribute with the project -->
    <taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar"/>

    <!-- Project properties -->
    <property name="APP_DESCRIPTOR_TEMPLATE" value="${TEMPLATES_DIR}/${APP_NAME}-app.xml"/>
    <property name="APP_DESCRIPTOR" value="${APP_NAME}-app.xml"/>

    <property name="WIN_SETUP_SCRIPT" value="installer.iss"/>

    <property name="STORETYPE" value="pkcs12"/>
    <property name="TEMP_DIR" value="${DIST_DIR}/temp"/>

    <property name="ABSOLUTE_PATH" location="${APP_ROOT_DIR}"/>

    <condition property="isMac">
        <os family="mac"/>
    </condition>

    <condition property="isWindows">
        <os family="windows"/>
    </condition>

    <target name="start" depends="~start.win, ~start.mac" />

    <target name="package" depends="~package.win, ~package.mac" />

    <target name="~start.mac" if="isMac">
        <sequential>
            <serve.debug.dir/>
            <compile file="${MAIN_CLASS}" output="${DEBUG_DIR}/${APP_NAME}.swf" debug="true"/>
            <exec executable="/bin/sh">
                <arg value="-c"/>
                <arg value="${ADL} ${DEBUG_DIR}/${APP_DESCRIPTOR}"/>
            </exec>
        </sequential>
    </target>

    <target name="~start.win" if="isWindows">
        <sequential>
            <serve.debug.dir/>
            <compile file="${MAIN_CLASS}" output="${DEBUG_DIR}/${APP_NAME}.swf" debug="true"/>
            <exec executable="cmd">
                <arg value="/c"/>
                <arg value="${ADL}.exe"/>
                <arg value="${DEBUG_DIR}/${APP_DESCRIPTOR}"/>
            </exec>
        </sequential>
    </target>

    <target name="~package.mac" if="isMac">
        <sequential>
            <cleanup dir="${DIST_DIR}"/>
            <create.app.descriptor dir="${TEMP_DIR}" url="${UPDATE_URL}"/>
            <create.update.descriptor url="${UPDATE_URL}"/>
            <compile file="${MAIN_CLASS}" output="${TEMP_DIR}/${APP_NAME}.swf"/>
            <package.bundle dir="${TEMP_DIR}" assets="${ASSETS_MAC}" name="${APP_NAME_LABEL}"/>
            <package.mac.installer src="${TEMP_DIR}/${APP_NAME_LABEL}.app" out="${DIST_DIR}"/>
            <sign.dmg file="${DIST_DIR}/${APP_NAME}.dmg"/>
            <delete dir="${TEMP_DIR}"/>
        </sequential>
    </target>

    <target name="~package.win" if="isWindows">
        <sequential>
            <cleanup dir="${DIST_DIR}"/>
            <create.app.descriptor dir="${TEMP_DIR}" url="${UPDATE_URL}"/>
            <create.update.descriptor url="${UPDATE_URL}"/>
            <compile file="${MAIN_CLASS}" output="${TEMP_DIR}/${APP_NAME}.swf"/>
            <package.bundle dir="${TEMP_DIR}" assets="${ASSETS_WIN}" name="${APP_NAME}"/>
            <package.win.installer dir="${TEMP_DIR}"/>
            <sign.exe file="${DIST_DIR}/${APP_NAME}.exe"/>
            <delete dir="${TEMP_DIR}"/>
        </sequential>
    </target>

    <macrodef name="package.win.installer">
        <attribute name="dir"/>
        <sequential>
            <copy file="${TEMPLATES_DIR}/${WIN_SETUP_SCRIPT}"
                  tofile="@{dir}/${WIN_SETUP_SCRIPT}"
                  overwrite="true"/>
            <replace file="@{dir}/${WIN_SETUP_SCRIPT}">
                <replacefilter token="VERSION" value="${APP_VERSION}"/>
                <replacefilter token="APP_DIR" value="${ABSOLUTE_PATH}"/>
                <replacefilter token="BUNDLE_DIR" value="${ABSOLUTE_PATH}/${TEMP_DIR}/${APP_NAME}"/>
            </replace>
            <exec executable="cmd">
                <arg value="/c"/>
                <arg value="${WIN_INSTALLER_DIR}/ISCC.exe"/>
                <arg value="${TEMP_DIR}/${WIN_SETUP_SCRIPT}"/>
            </exec>
        </sequential>
    </macrodef>

    <macrodef name="package.mac.installer">
        <attribute name="src"/>
        <attribute name="out"/>
        <sequential>
            <exec executable="/bin/sh">
                <arg value="-c"/>
                <arg value="pwd"/>
            </exec>
            <exec executable="/bin/sh">
                <arg value="-c"/>
                <arg value="create-dmg --volname '${APP_NAME_LABEL}' --window-size 512 320 --background 'resources/images/dmg-background.png' --icon '${APP_NAME_LABEL}.app' 120 175 --app-drop-link 400 175 '@{out}/${APP_NAME}.dmg' '@{src}'"/>
            </exec>
        </sequential>
    </macrodef>

    <macrodef name="serve.debug.dir">
        <sequential>
            <cleanup dir="${DEBUG_DIR}"/>
            <copy todir="${DEBUG_DIR}" verbose="true">
                <fileset dir="${STATIC_DIR}" includes="**/*"/>
            </copy>
            <create.app.descriptor dir="${DEBUG_DIR}" url="${UPDATE_URL}"/>
        </sequential>
    </macrodef>

    <macrodef name="package.bundle">
        <attribute name="dir"/>
        <attribute name="assets"/>
        <attribute name="name"/>
        <sequential>
            <java jar="${ADT}" fork="true" failonerror="true">
                <arg value="-package"/>
                <arg value="-storetype"/>
                <arg value="${STORETYPE}"/>
                <arg value="-keystore"/>
                <arg value="${KEYSTORE}"/>
                <arg value="-storepass"/>
                <arg value="${STOREPASS}"/>
                <arg value="-target"/>
                <arg value="bundle"/>
                <arg value="@{dir}/@{name}/"/>
                <arg value="${TEMP_DIR}/${APP_DESCRIPTOR}"/>
                <arg line="-C ${TEMP_DIR} ${APP_NAME}.swf"/>
                <arg line="-C ${STATIC_DIR} @{assets}"/>
            </java>
        </sequential>
    </macrodef>

    <macrodef name="compile">
        <attribute name="debug" default="false"/>
        <attribute name="file"/>
        <attribute name="output"/>
        <sequential>
            <mxmlc
                    file="@{file}"
                    output="@{output}"
                    optimize="true"
                    show-actionscript-warnings="false"
                    locale="en_US"
                    debug="@{debug}">
                <load-config filename="${FLEX_HOME}/frameworks/air-config.xml"/>
                <source-path path-element="${SRC_DIR}"/>
                <library-path dir="${FLEX_HOME}/frameworks/libs/" includes="*.swc"/>
                <library-path dir="${VENDOR_DIR}" includes="*.swc"/>
            </mxmlc>
        </sequential>
    </macrodef>

    <macrodef name="cleanup">
        <attribute name="dir"/>
        <sequential>
            <delete includeemptydirs="true" quiet="true">
                <fileset dir="@{dir}" includes="**/*"/>
            </delete>
        </sequential>
    </macrodef>

    <macrodef name="create.app.descriptor">
        <attribute name="dir"/>
        <attribute name="url"/>
        <sequential>
            <!-- update app version in descriptor.xml -->
            <copy file="${APP_DESCRIPTOR_TEMPLATE}" tofile="@{dir}/${APP_DESCRIPTOR}" overwrite="true"/>
            <replace file="@{dir}/${APP_DESCRIPTOR}">
                <replacefilter token="VERSION" value="${APP_VERSION}"/>
                <replacefilter token="VER_LABEL" value="${APP_VERSION_LABEL}"/>
            </replace>
            <!-- update update_url in config.xml -->
            <copy file="${TEMPLATES_DIR}/${APP_CONFIG}" tofile="${RESOURCES_DIR}/${APP_CONFIG}" overwrite="true"/>
            <replace file="${RESOURCES_DIR}/${APP_CONFIG}">
                <replacefilter token="UPDATE_DESCRIPTOR" value="@{url}/${APP_UPDATER}"/>
            </replace>
        </sequential>
    </macrodef>

    <macrodef name="create.update.descriptor">
        <attribute name="url"/>
        <sequential>
            <!-- update app version in update.xml -->
            <copy file="${TEMPLATES_DIR}/${APP_UPDATER}" tofile="${DIST_DIR}/${APP_UPDATER}" overwrite="true"/>
            <replace file="${DIST_DIR}/${APP_UPDATER}">
                <replacefilter token="VERSION" value="${APP_VERSION}"/>
                <replacefilter token="VER_LABEL" value="${APP_VERSION_LABEL}"/>
                <replacefilter token="DOWNLOAD_URL" value="@{url}/${APP_NAME}.exe"/>
            </replace>
        </sequential>
    </macrodef>

    <macrodef name="sign.exe">
        <attribute name="file"/>
        <sequential>
            <exec executable="${SIGN_TOOL}">
                <arg line="sign /f ${KEYSTORE} /p ${STOREPASS} /d ${PUBLISHER_NAME} /du ${PUBLISHER_URL} /t ${TIMESTAMP_SERVER} @{file}"/>
            </exec>
        </sequential>
    </macrodef>

    <macrodef name="sign.dmg">
        <attribute name="file"/>
        <sequential>
        </sequential>
    </macrodef>
</project>
